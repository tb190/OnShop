@model OnShop.Models.VendorViewModel
@{
    ViewData["Title"] = "OnShop Vendor Home";
    Layout = "~/Views/Shared/_LayoutVendor.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - OnShop</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/OnShop.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />

</head>
<body>

    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <div class="dashboard-card">
                    <div class="card-header">
                        <i class="fas fa-users"></i>
                        <h3>Total Followers</h3>
                    </div>
                    <p>@Model.AllFollowers.Count</p>
                </div>
            </div>
            <div class="col-md-6">
                <div class="dashboard-card">
                    <div class="card-header">
                        <i class="fas fa-cube"></i>
                        <h3>Total Products</h3>
                    </div>
                    <p>@Model.AllProducts.Count</p>
                </div>
            </div>
        </div>


        <div class="row">
            <div class="col-md-6">
                <div class="dashboard-card">
                    <div class="card-header">
                        <i class="fas fa-receipt"></i>
                        <h3>Total Sold</h3>
                    </div>
                    <p>@Model.TotalSold</p>
                </div>
            </div>

            <div class="col-md-6">
                <div class="dashboard-card">
                    <div class="card-header">
                        <i class="fas fa-dollar-sign"></i>
                        <h3>Total Revenue</h3>
                    </div>
                    <p>@Model.TotalRevenue.ToString("C")</p>
                </div>
            </div>
        </div>


        <!-- category and types -->
        <div class="row">
            <div class="col-md-6">
                <div class="dashboard-card">
                    <div class="card-header">
                        <i class="fas fa-tags"></i>
                        <h3>Total Categories & Types</h3>
                    </div>
                    <p>Categories: @Model.categoryTypeCount.Count</p>
                    <p>Types: @Model.categoryTypeCount.SelectMany(c => c.Value.Keys).Distinct().Count()</p>
                </div>
            </div>
            <div class="col-md-6">
                <div class="dashboard-card">
                    <div class="card-header">
                        <i class="fas fa-boxes"></i>
                        <h3>Products by Category/Type</h3>
                    </div>
                    <ul>
                        @foreach (var category in @Model.categoryTypeCount)
                {
                        <li>
                            <strong>@category.Key</strong>:
                            <ul>
                                @foreach (var type in category.Value)
                            {
                                <li>
                                    @type.Key: @type.Value
                                </li>
                            }
                            </ul>
                        </li>
                }
                    </ul>
                </div>
            </div>
        </div>



        <div class="row">
            <!-- Total Favorites Card -->
            <div class="col-md-4">
                <div class="dashboard-card">
                    <div class="card-header">
                        <i class="fas fa-heart"></i>
                        <h3>Total Favorites</h3>
                    </div>
                    <p>@Model.TotalFavorites</p>
                </div>
            </div>

            <!-- Total Clicks Card -->
            <div class="col-md-4">
                <div class="dashboard-card">
                    <div class="card-header">
                        <i class="fas fa-hand-pointer"></i>
                        <h3>Total Clicks</h3>
                    </div>
                    <p>@Model.TotalClicks</p>
                </div>
            </div>

            <!-- Total Reviews Card -->
            <div class="col-md-4">
                <div class="dashboard-card">
                    <div class="card-header">
                        <i class="fas la-comment-dots"></i>
                        <h3>Total Reviews</h3>
                    </div>
                    <p>@Model.TotalReviews</p>
                </div>
            </div>
        </div>



        <div class="row">
            <div class="col-md-6">
                <div class="chart-container">
                    <h3>Sales Trend</h3>
                    <canvas id="salesChart"></canvas>
                </div>
            </div>
            <div class="col-md-6">
                <div class="chart-container">
                    <h3>AllFollowers Trend</h3>
                    <canvas id="userRegistrationsChart"></canvas>
                </div>
            </div>
        </div>

    </div>


    <style>

        .container {
            margin: 20px auto;
            max-width: 1200px;
            overflow-y: auto;
            height: calc(100vh - 70px); /* Adjust height as needed */
            padding-right: 20px; /* To prevent horizontal scrollbar when there's vertical scrollbar */
        }

        .dashboard-card {
            background: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            padding: 20px;
            margin-bottom: 20px;
            transition: transform 0.3s, box-shadow 0.3s;
        }

            .dashboard-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
            }

            .dashboard-card h3 {
                margin-top: 0;
                font-size: 22px;
                color: #333;
                font-weight: 600;
            }

            .dashboard-card p {
                font-size: 1.2em;
                color: #555;
                margin: 10px 0;
                text-align: center;
            }

        .card-header {
            background: #fff;
            display: flex;
            align-items: center;
            gap: 10px; /* Adjust spacing between icon and text */
            margin-bottom: 15px;
        }

            .card-header i {
                font-size: 1.2em; /* Adjust icon size as needed */
                color: #29353c; /* Icon color */
            }

            .card-header h3 {
                margin: 0; /* Remove default margin */
            }

        .chart-container {
            background: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            padding: 15px;
            margin-bottom: 15px;
            /* Optional: Adjust the height of the charts to ensure they fit well */
            height: 400px;
        }

            .chart-container canvas {
                width: 100%;
                height: 100%; /* Ensure the canvas fills the container */
            }
    </style>




    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Sales Trend Chart
        var ctx = document.getElementById('salesChart').getContext('2d');
        var salesChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.PurchasedProducts.Select(p => p.PurchasedDate.ToString("MMM yyyy")).Distinct())),
                datasets: [{
                    label: 'Sales',
                    data: @Html.Raw(Json.Serialize(Model.PurchasedProducts
                        .GroupBy(p => p.PurchasedDate.ToString("MMM yyyy"))
                        .Select(g => g.Count())
                        .ToArray())),
                    borderColor: 'rgba(75, 192, 192, 1)',
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    x: {
                        beginAtZero: true
                    },
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });


         // AllFollowers Trend Chart
       var ctxUsers = document.getElementById('userRegistrationsChart').getContext('2d');
        var userRegistrationsChart = new Chart(ctxUsers, {
            type: 'bar', // Changed from 'line' to 'bar'
            data: {
                labels: @Html.Raw(Json.Serialize(Model.AllFollowers
                    .GroupBy(u => u.CreatedAt.ToString("MMM yyyy"))
                    .Select(g => g.Key)
                    .ToArray())), // Use keys for labels
                datasets: [{
                    label: 'User Registrations',
                    data: @Html.Raw(Json.Serialize(Model.AllFollowers
                        .GroupBy(u => u.CreatedAt.ToString("MMM yyyy"))
                        .Select(g => g.Count())
                        .ToArray())),
                    backgroundColor: 'rgba(153, 102, 255, 0.5)', // Bar color
                    borderColor: 'rgba(153, 102, 255, 1)', // Bar border color
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    x: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Month'
                        }
                    },
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Number of Followers'
                        }
                    }
                }
            }
        });
    </script>

</body>
</html>
